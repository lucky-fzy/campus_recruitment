<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ldu.bs.dao.SmallClassMapper">
  <resultMap id="BaseResultMap" type="com.ldu.bs.bean.SmallClass">
    <id column="small_id" jdbcType="INTEGER" property="smallId" />
    <result column="small_name" jdbcType="VARCHAR" property="smallName" />
    <result column="ishot" jdbcType="INTEGER" property="ishot" />
    <result column="mid_id" jdbcType="INTEGER" property="midId" />
  </resultMap>
  <resultMap id="WithMidResultMap" type="com.ldu.bs.bean.SmallClass">
    <id column="small_id" jdbcType="INTEGER" property="smallId" />
    <result column="small_name" jdbcType="VARCHAR" property="smallName" />
    <result column="ishot" jdbcType="INTEGER" property="ishot" />
    <result column="mid_id" jdbcType="INTEGER" property="midId" />

    <association javaType="com.ldu.bs.bean.MidClass" property="midClass">
      <id column="mid_id" jdbcType="INTEGER" property="midId" />
      <result column="mid_name" jdbcType="VARCHAR" property="midName" />
      <result column="big_id" jdbcType="INTEGER" property="bigId" />
    </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    small_id, small_name, ishot, mid_id
  </sql>

  <select id="selectWithMid" parameterType="com.ldu.bs.bean.SmallClassExample"  resultMap="WithMidResultMap">
      select * from small_class s,mid_class m where s.mid_id = m.mid_id;
  </select>
  <select id="selectByExample" parameterType="com.ldu.bs.bean.SmallClassExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from small_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from small_class
    where small_id = #{smallId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from small_class
    where small_id = #{smallId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ldu.bs.bean.SmallClassExample">
    delete from small_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ldu.bs.bean.SmallClass">
    insert into small_class (small_id, small_name, ishot, 
      mid_id)
    values (#{smallId,jdbcType=INTEGER}, #{smallName,jdbcType=VARCHAR}, #{ishot,jdbcType=INTEGER}, 
      #{midId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ldu.bs.bean.SmallClass">
    insert into small_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="smallId != null">
        small_id,
      </if>
      <if test="smallName != null">
        small_name,
      </if>
      <if test="ishot != null">
        ishot,
      </if>
      <if test="midId != null">
        mid_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="smallId != null">
        #{smallId,jdbcType=INTEGER},
      </if>
      <if test="smallName != null">
        #{smallName,jdbcType=VARCHAR},
      </if>
      <if test="ishot != null">
        #{ishot,jdbcType=INTEGER},
      </if>
      <if test="midId != null">
        #{midId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ldu.bs.bean.SmallClassExample" resultType="java.lang.Long">
    select count(*) from small_class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update small_class
    <set>
      <if test="record.smallId != null">
        small_id = #{record.smallId,jdbcType=INTEGER},
      </if>
      <if test="record.smallName != null">
        small_name = #{record.smallName,jdbcType=VARCHAR},
      </if>
      <if test="record.ishot != null">
        ishot = #{record.ishot,jdbcType=INTEGER},
      </if>
      <if test="record.midId != null">
        mid_id = #{record.midId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update small_class
    set small_id = #{record.smallId,jdbcType=INTEGER},
      small_name = #{record.smallName,jdbcType=VARCHAR},
      ishot = #{record.ishot,jdbcType=INTEGER},
      mid_id = #{record.midId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ldu.bs.bean.SmallClass">
    update small_class
    <set>
      <if test="smallName != null">
        small_name = #{smallName,jdbcType=VARCHAR},
      </if>
      <if test="ishot != null">
        ishot = #{ishot,jdbcType=INTEGER},
      </if>
      <if test="midId != null">
        mid_id = #{midId,jdbcType=INTEGER},
      </if>
    </set>
    where small_id = #{smallId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ldu.bs.bean.SmallClass">
    update small_class
    set small_name = #{smallName,jdbcType=VARCHAR},
      ishot = #{ishot,jdbcType=INTEGER},
      mid_id = #{midId,jdbcType=INTEGER}
    where small_id = #{smallId,jdbcType=INTEGER}
  </update>
</mapper>