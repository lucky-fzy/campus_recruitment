<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ldu.bs.dao.PositionMapper">
  <resultMap id="BaseResultMap" type="com.ldu.bs.bean.Position">
    <id column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="position_type" jdbcType="VARCHAR" property="positionType" />
    <result column="position_name" jdbcType="VARCHAR" property="positionName" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="job_type" jdbcType="VARCHAR" property="jobType" />
    <result column="min_salary" jdbcType="INTEGER" property="minSalary" />
    <result column="max_salary" jdbcType="INTEGER" property="maxSalary" />
    <result column="job_city" jdbcType="VARCHAR" property="jobCity" />
    <result column="job_experience" jdbcType="VARCHAR" property="jobExperience" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="position_temptation" jdbcType="VARCHAR" property="positionTemptation" />
    <result column="position_requirement" jdbcType="VARCHAR" property="positionRequirement" />
    <result column="job_addr" jdbcType="VARCHAR" property="jobAddr" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="release_time" jdbcType="VARCHAR" property="releaseTime" />
    <result column="is_online" jdbcType="CHAR" property="isOnline" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ldu.bs.bean.Position">
    <result column="position_describe" jdbcType="LONGVARCHAR" property="positionDescribe" />
  </resultMap>
  <resultMap id="WithCompResultMap" type="com.ldu.bs.bean.Position">
    <id column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="position_type" jdbcType="VARCHAR" property="positionType" />
    <result column="position_name" jdbcType="VARCHAR" property="positionName" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="job_type" jdbcType="VARCHAR" property="jobType" />
    <result column="min_salary" jdbcType="INTEGER" property="minSalary" />
    <result column="max_salary" jdbcType="INTEGER" property="maxSalary" />
    <result column="job_city" jdbcType="VARCHAR" property="jobCity" />
    <result column="job_experience" jdbcType="VARCHAR" property="jobExperience" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="position_describe" jdbcType="LONGVARCHAR" property="positionDescribe" />
    <result column="position_temptation" jdbcType="VARCHAR" property="positionTemptation" />
    <result column="position_requirement" jdbcType="VARCHAR" property="positionRequirement" />
    <result column="job_addr" jdbcType="VARCHAR" property="jobAddr" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="release_time" jdbcType="VARCHAR" property="releaseTime" />
    <result column="is_online" jdbcType="CHAR" property="isOnline" />

    <!--指定联合查询出的公司字段的封装-->
    <association javaType="com.ldu.bs.bean.Company" property="company">
      <id column="company_id" jdbcType="INTEGER" property="companyId" />
      <result column="company_name" jdbcType="VARCHAR" property="companyName" />
      <result column="company_phone" jdbcType="INTEGER" property="companyPhone" />
      <result column="company_email" jdbcType="VARCHAR" property="companyEmail" />
      <result column="company_pwd" jdbcType="VARCHAR" property="companyPwd" />
      <result column="company_logo" jdbcType="VARCHAR" property="companyLogo" />
      <result column="company_website" jdbcType="VARCHAR" property="companyWebsite" />
      <result column="company_city" jdbcType="VARCHAR" property="companyCity" />
      <result column="field" jdbcType="VARCHAR" property="field" />
      <result column="scale" jdbcType="VARCHAR" property="scale" />
      <result column="stage" jdbcType="VARCHAR" property="stage" />
      <result column="tag" jdbcType="VARCHAR" property="tag" />
      <result column="receive_email" jdbcType="VARCHAR" property="receiveEmail" />
      <result column="company_describe" jdbcType="LONGVARCHAR" property="companyDescribe" />
      <result column="allname" jdbcType="VARCHAR" property="allname" />
      <result column="is_authentication" jdbcType="CHAR" property="isAuthentication" />
    </association>
  </resultMap>

  <sql id="WithComp_Column_List">
    p.position_id, p.position_type, p.position_name, p.department, p.job_type, p.min_salary, p.max_salary, p.job_city,
    p.job_experience, p.degree, p.position_temptation, p.position_requirement, p.job_addr,
    p.company_id, p.position_describe, p.release_time, p.is_online, c.company_id, c.company_name, c.company_phone, c.company_email,
    c.company_pwd, c.company_logo, c.company_website, c.company_city, c.field, c.scale, c.stage, c.tag,
    c.receive_email, c.company_describe, c.allname, c.is_authentication
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    position_id, position_type, position_name, department, job_type, min_salary, max_salary, 
    job_city, job_experience, degree, position_temptation, position_requirement, job_addr, 
    company_id, release_time, is_online
  </sql>
  <sql id="Blob_Column_List">
    position_describe
  </sql>

  <!--查询职位同时带公司信息-->
  <select id="selectByExampleWithComp" resultMap="WithCompResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithComp_Column_List" />
    from position p
    LEFT JOIN company c on p.company_id=c.company_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <!--根据公司名查询职位-->
  <select id="selectWithCompName" parameterType="java.lang.String" resultMap="WithCompResultMap">
    select * from position p,company c where p.company_id = c.company_id and company_name like CONCAT('%',#{companyName},'%')
  </select>

  <select id="selectByExampleWithBLOBs" parameterType="com.ldu.bs.bean.PositionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ldu.bs.bean.PositionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from position
    where position_id = #{positionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from position
    where position_id = #{positionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ldu.bs.bean.PositionExample">
    delete from position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ldu.bs.bean.Position">
    insert into position (position_id, position_type, position_name, 
      department, job_type, min_salary, 
      max_salary, job_city, job_experience, 
      degree, position_temptation, position_requirement, 
      job_addr, company_id, release_time, 
      is_online, position_describe)
    values (#{positionId,jdbcType=INTEGER}, #{positionType,jdbcType=VARCHAR}, #{positionName,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{jobType,jdbcType=VARCHAR}, #{minSalary,jdbcType=INTEGER}, 
      #{maxSalary,jdbcType=INTEGER}, #{jobCity,jdbcType=VARCHAR}, #{jobExperience,jdbcType=VARCHAR}, 
      #{degree,jdbcType=VARCHAR}, #{positionTemptation,jdbcType=VARCHAR}, #{positionRequirement,jdbcType=VARCHAR}, 
      #{jobAddr,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER}, #{releaseTime,jdbcType=VARCHAR}, 
      #{isOnline,jdbcType=CHAR}, #{positionDescribe,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ldu.bs.bean.Position">
    insert into position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="positionId != null">
        position_id,
      </if>
      <if test="positionType != null">
        position_type,
      </if>
      <if test="positionName != null">
        position_name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="minSalary != null">
        min_salary,
      </if>
      <if test="maxSalary != null">
        max_salary,
      </if>
      <if test="jobCity != null">
        job_city,
      </if>
      <if test="jobExperience != null">
        job_experience,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="positionTemptation != null">
        position_temptation,
      </if>
      <if test="positionRequirement != null">
        position_requirement,
      </if>
      <if test="jobAddr != null">
        job_addr,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="isOnline != null">
        is_online,
      </if>
      <if test="positionDescribe != null">
        position_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="positionType != null">
        #{positionType,jdbcType=VARCHAR},
      </if>
      <if test="positionName != null">
        #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="minSalary != null">
        #{minSalary,jdbcType=INTEGER},
      </if>
      <if test="maxSalary != null">
        #{maxSalary,jdbcType=INTEGER},
      </if>
      <if test="jobCity != null">
        #{jobCity,jdbcType=VARCHAR},
      </if>
      <if test="jobExperience != null">
        #{jobExperience,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="positionTemptation != null">
        #{positionTemptation,jdbcType=VARCHAR},
      </if>
      <if test="positionRequirement != null">
        #{positionRequirement,jdbcType=VARCHAR},
      </if>
      <if test="jobAddr != null">
        #{jobAddr,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=VARCHAR},
      </if>
      <if test="isOnline != null">
        #{isOnline,jdbcType=CHAR},
      </if>
      <if test="positionDescribe != null">
        #{positionDescribe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ldu.bs.bean.PositionExample" resultType="java.lang.Long">
    select count(*) from position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update position
    <set>
      <if test="record.positionId != null">
        position_id = #{record.positionId,jdbcType=INTEGER},
      </if>
      <if test="record.positionType != null">
        position_type = #{record.positionType,jdbcType=VARCHAR},
      </if>
      <if test="record.positionName != null">
        position_name = #{record.positionName,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=VARCHAR},
      </if>
      <if test="record.minSalary != null">
        min_salary = #{record.minSalary,jdbcType=INTEGER},
      </if>
      <if test="record.maxSalary != null">
        max_salary = #{record.maxSalary,jdbcType=INTEGER},
      </if>
      <if test="record.jobCity != null">
        job_city = #{record.jobCity,jdbcType=VARCHAR},
      </if>
      <if test="record.jobExperience != null">
        job_experience = #{record.jobExperience,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.positionTemptation != null">
        position_temptation = #{record.positionTemptation,jdbcType=VARCHAR},
      </if>
      <if test="record.positionRequirement != null">
        position_requirement = #{record.positionRequirement,jdbcType=VARCHAR},
      </if>
      <if test="record.jobAddr != null">
        job_addr = #{record.jobAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.releaseTime != null">
        release_time = #{record.releaseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isOnline != null">
        is_online = #{record.isOnline,jdbcType=CHAR},
      </if>
      <if test="record.positionDescribe != null">
        position_describe = #{record.positionDescribe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update position
    set position_id = #{record.positionId,jdbcType=INTEGER},
      position_type = #{record.positionType,jdbcType=VARCHAR},
      position_name = #{record.positionName,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=VARCHAR},
      min_salary = #{record.minSalary,jdbcType=INTEGER},
      max_salary = #{record.maxSalary,jdbcType=INTEGER},
      job_city = #{record.jobCity,jdbcType=VARCHAR},
      job_experience = #{record.jobExperience,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      position_temptation = #{record.positionTemptation,jdbcType=VARCHAR},
      position_requirement = #{record.positionRequirement,jdbcType=VARCHAR},
      job_addr = #{record.jobAddr,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER},
      release_time = #{record.releaseTime,jdbcType=VARCHAR},
      is_online = #{record.isOnline,jdbcType=CHAR},
      position_describe = #{record.positionDescribe,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update position
    set position_id = #{record.positionId,jdbcType=INTEGER},
      position_type = #{record.positionType,jdbcType=VARCHAR},
      position_name = #{record.positionName,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=VARCHAR},
      min_salary = #{record.minSalary,jdbcType=INTEGER},
      max_salary = #{record.maxSalary,jdbcType=INTEGER},
      job_city = #{record.jobCity,jdbcType=VARCHAR},
      job_experience = #{record.jobExperience,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      position_temptation = #{record.positionTemptation,jdbcType=VARCHAR},
      position_requirement = #{record.positionRequirement,jdbcType=VARCHAR},
      job_addr = #{record.jobAddr,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER},
      release_time = #{record.releaseTime,jdbcType=VARCHAR},
      is_online = #{record.isOnline,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ldu.bs.bean.Position">
    update position
    <set>
      <if test="positionType != null">
        position_type = #{positionType,jdbcType=VARCHAR},
      </if>
      <if test="positionName != null">
        position_name = #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="minSalary != null">
        min_salary = #{minSalary,jdbcType=INTEGER},
      </if>
      <if test="maxSalary != null">
        max_salary = #{maxSalary,jdbcType=INTEGER},
      </if>
      <if test="jobCity != null">
        job_city = #{jobCity,jdbcType=VARCHAR},
      </if>
      <if test="jobExperience != null">
        job_experience = #{jobExperience,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="positionTemptation != null">
        position_temptation = #{positionTemptation,jdbcType=VARCHAR},
      </if>
      <if test="positionRequirement != null">
        position_requirement = #{positionRequirement,jdbcType=VARCHAR},
      </if>
      <if test="jobAddr != null">
        job_addr = #{jobAddr,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=VARCHAR},
      </if>
      <if test="isOnline != null">
        is_online = #{isOnline,jdbcType=CHAR},
      </if>
      <if test="positionDescribe != null">
        position_describe = #{positionDescribe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where position_id = #{positionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ldu.bs.bean.Position">
    update position
    set position_type = #{positionType,jdbcType=VARCHAR},
      position_name = #{positionName,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=VARCHAR},
      min_salary = #{minSalary,jdbcType=INTEGER},
      max_salary = #{maxSalary,jdbcType=INTEGER},
      job_city = #{jobCity,jdbcType=VARCHAR},
      job_experience = #{jobExperience,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      position_temptation = #{positionTemptation,jdbcType=VARCHAR},
      position_requirement = #{positionRequirement,jdbcType=VARCHAR},
      job_addr = #{jobAddr,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=VARCHAR},
      is_online = #{isOnline,jdbcType=CHAR},
      position_describe = #{positionDescribe,jdbcType=LONGVARCHAR}
    where position_id = #{positionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ldu.bs.bean.Position">
    update position
    set position_type = #{positionType,jdbcType=VARCHAR},
      position_name = #{positionName,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=VARCHAR},
      min_salary = #{minSalary,jdbcType=INTEGER},
      max_salary = #{maxSalary,jdbcType=INTEGER},
      job_city = #{jobCity,jdbcType=VARCHAR},
      job_experience = #{jobExperience,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      position_temptation = #{positionTemptation,jdbcType=VARCHAR},
      position_requirement = #{positionRequirement,jdbcType=VARCHAR},
      job_addr = #{jobAddr,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=VARCHAR},
      is_online = #{isOnline,jdbcType=CHAR}
    where position_id = #{positionId,jdbcType=INTEGER}
  </update>
</mapper>